--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v73=v2(v0(v30,16));if v19 then local v78=v5(v73,v19);v19=nil;return v78;else return v73;end end end);local function v20(v31,v32,v33)if v33 then local v74=829 -(144 + 685) ;local v75;while true do if (v74==(164 -(128 + 36))) then v75=(v31/(2^(v32-(1 + 0))))%((2 + 0)^(((v33-(1543 -(1383 + 159))) -(v32-1)) + (1688 -(536 + 1151)) + 0)) ;return v75-(v75%1) ;end end else local v76=0 + (0 -0) ;local v77;while true do if (v76==((0 -0) -0)) then v77=2^(v32-(1 + 0)) ;return (((v31%(v77 + v77))>=v77) and (1 + 0)) or ((0 -0) -0) ;end end end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35,v36=v1(v16,v18,v18 + 2 );v18=v18 + (3 -1) ;return (v36 * (750 -494)) + v35 ;end local function v23()local v37,v38,v39,v40=v1(v16,v18,v18 + (830 -(512 + 315)) );v18=v18 + 4 ;return (v40 * (4543477 + 12233739)) + (v39 * (110370 -44834)) + (v38 * ((2309 -1516) -537)) + v37 ;end local function v24()local v41=v23();local v42=v23();local v43=1;local v44=(v20(v42,2 -1 ,9 + 11 ) * (((5012 -3865) -(609 + 536))^(22 + 10))) + v41 ;local v45=v20(v42,46 -25 ,1324 -(1247 + 46) );local v46=((v20(v42,1372 -(357 + (2290 -(70 + 1237))) )==(3 -2)) and  -1) or 1 ;if (v45==(0 -0)) then if (v44==(0 -0)) then return v46 * (0 -0) ;else v45=1 -0 ;v43=0 + 0 ;end elseif (v45==(8522 -6475)) then return ((v44==(1717 -(402 + 1315))) and (v46 * ((1 + 0 + 0)/(0 + (0 -0))))) or (v46 * NaN) ;end return v8(v46,v45-(4014 -2991) ) * (v43 + (v44/(((1058 + 679) -(1682 + (127 -74)))^(130 -78)))) ;end local function v25(v47)local v48;if  not v47 then v47=v23();if (v47==(0 + 0)) then return "";end end v48=v3(v16,v18,(v18 + v47) -(3 -2) );v18=v18 + v47 ;local v49={};for v65=2 -1 , #v48 do v49[v65]=v2(v1(v3(v48,v65,v65)));end return v6(v49);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v50=1983 -(1519 + 464) ;local v51;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v50==(1 + 0)) then v53=nil;v54=nil;v50=1 + 1 ;end if (2~=v50) then else v55=nil;v56=nil;v50=3;end if (v50~=(1 + 2)) then else v57=nil;v58=nil;v50=4;end if (v50==(0 -0)) then v51=1246 -(985 + 261) ;v52=nil;v50=321 -(154 + 166) ;end if ((448 -(303 + 141))==v50) then while true do if (v51==0) then local v89=406 -(156 + 250) ;while true do if (v89==(1579 -(586 + 992))) then v51=1 + 0 ;break;end if (v89==(0 + 0)) then local v102=0;while true do if ((1 + 0)==v102) then v89=1 + 0 ;break;end if (v102~=0) then else v52=0 + 0 ;v53=nil;v102=1052 -(676 + 375) ;end end end end end if (v51~=(2 -1)) then else local v90=812 -(657 + 155) ;while true do if (v90~=1) then else v51=1148 -(111 + 1035) ;break;end if (v90==(0 + 0)) then local v103=0;while true do if (v103==(1413 -(211 + 1201))) then v90=1;break;end if (v103~=(390 -(163 + 227))) then else v54=nil;v55=nil;v103=1 + 0 ;end end end end end if (3==v51) then v58=nil;while true do local v97=0 + 0 ;while true do if (v97~=1) then else if (v52==0) then local v105=0 + 0 ;local v106;while true do if (v105==(1342 -(239 + 1103))) then v106=0 -0 ;while true do if (0==v106) then local v115=0 -0 ;while true do if ((1 + 0)==v115) then v106=1;break;end if (v115==(0 -0)) then v53={};v54={};v115=1677 -(439 + 1237) ;end end end if (v106==(1492 -(68 + 1423))) then v55={};v52=154 -(60 + 93) ;break;end end break;end end end if (v52==2) then local v107=584 -(416 + 168) ;local v108;while true do if (v107==(0 -0)) then v108=0 + 0 ;while true do if (v108==(0 -0)) then local v116=0 + 0 ;local v117;while true do if (0==v116) then v117=0 + 0 ;while true do if ((0 -0)==v117) then for v136=1540 -(775 + 764) ,v57 do local v137=0 -0 ;local v138;local v139;local v140;local v141;local v142;while true do if (v137~=0) then else v138=0 + 0 ;v139=nil;v137=3 -2 ;end if (v137==(51 -(16 + 33))) then v142=nil;while true do if ((1 + 0)~=v138) then else v141=nil;v142=nil;v138=792 -(201 + 589) ;end if (v138~=(5 -3)) then else while true do if (v139==(190 -(63 + 126))) then v142=nil;while true do if (v140~=(0 + 0)) then else local v276=0 -0 ;local v277;while true do if (v276==(0 -0)) then v277=0;while true do if (v277==0) then local v311=0 -0 ;local v312;while true do if (v311~=0) then else v312=1113 -(181 + 932) ;while true do if (v312~=1) then else v277=1189 -(1112 + 76) ;break;end if (0==v312) then v141=v21();v142=nil;v312=2 -1 ;end end break;end end end if (v277==(1 + 0)) then v140=3 -2 ;break;end end break;end end end if (v140==1) then if (v141==(1970 -(1961 + 8))) then v142=v21()~=0 ;elseif (v141==(3 -1)) then v142=v24();elseif (v141==3) then v142=v25();end v58[v136]=v142;break;end end break;end if (v139~=(0 + 0)) then else local v256=0 -0 ;while true do if ((1296 -(174 + 1121))==v256) then v139=1;break;end if (v256==(0 -0)) then v140=0 -0 ;v141=nil;v256=1;end end end end break;end if (v138==(0 + 0)) then local v220=0 + 0 ;while true do if (v220==(1 + 0)) then v138=434 -(277 + 156) ;break;end if (v220==(1979 -(593 + 1386))) then v139=0 + 0 ;v140=nil;v220=1 + 0 ;end end end end break;end if ((2 -1)==v137) then v140=nil;v141=nil;v137=1 + 1 ;end end end v56[3]=v21();v117=1;end if (v117==(1 -0)) then v108=1 + 0 ;break;end end break;end end end if (v108~=(1 + 0)) then else for v118=3 -2 ,v23() do local v119=243 -(75 + 168) ;local v120;local v121;local v122;while true do if (v119==(0 -0)) then v120=0 -0 ;v121=nil;v119=1;end if (v119==1) then v122=nil;while true do if ((895 -(43 + 851))~=v120) then else while true do if (v121==(504 -(459 + 45))) then v122=v21();if (v20(v122,2 -1 ,1519 -(1021 + 497) )==(0 + 0)) then local v215=0 + 0 ;local v216;local v217;local v218;local v219;while true do if (v215~=(3 -2)) then else v218=nil;v219=nil;v215=2;end if ((0 + 0)==v215) then v216=0 + 0 ;v217=nil;v215=1565 -(1289 + 275) ;end if (v215==(3 -1)) then while true do if ((990 -(148 + 841))==v216) then local v272=0;while true do if (v272==(865 -(470 + 395))) then v219={v22(),v22(),nil,nil};if (v217==(267 -(28 + 239))) then local v302=1390 -(959 + 431) ;local v303;while true do if (v302~=0) then else v303=0 -0 ;while true do if (v303~=(0 -0)) then else v219[3]=v22();v219[326 -(258 + 64) ]=v22();break;end end break;end end elseif (v217==(1 -0)) then v219[3]=v23();elseif (v217==(2 + 0)) then v219[8 -5 ]=v23() -((2 + 0)^(1244 -(776 + 452))) ;elseif (v217==(332 -(104 + 225))) then local v324=589 -(575 + 14) ;while true do if (v324~=(0 -0)) then else v219[1502 -(1472 + 27) ]=v23() -((5 -3)^(14 + 2)) ;v219[749 -(152 + 593) ]=v22();break;end end end v272=1 + 0 ;end if (v272==(2 -1)) then v216=748 -(545 + 201) ;break;end end end if (v216==3) then if (v20(v218,1118 -(789 + 326) ,3 + 0 )==(1 + 0)) then v219[3 + 1 ]=v58[v219[13 -9 ]];end v53[v118]=v219;break;end if (v216==2) then local v274=0 + 0 ;local v275;while true do if (v274~=(0 -0)) then else v275=0 -0 ;while true do if (v275~=(0 + 0)) then else if (v20(v218,1 + 0 ,1 + 0 )~=(1 + 0)) then else v219[6 -4 ]=v58[v219[2 + 0 ]];end if (v20(v218,2 + 0 ,2)==1) then v219[8 -5 ]=v58[v219[3]];end v275=1 + 0 ;end if (v275==(1698 -(440 + 1257))) then v216=11 -8 ;break;end end break;end end end if (v216==(0 -0)) then v217=v20(v122,5 -3 ,11 -8 );v218=v20(v122,11 -7 ,17 -11 );v216=1 + 0 ;end end break;end end end break;end end break;end if (v120==0) then v121=952 -(761 + 191) ;v122=nil;v120=1;end end break;end end end v52=1981 -(635 + 1343) ;break;end end break;end end end break;end if ((0 + 0)~=v97) then else local v104=0;while true do if (v104~=(1755 -(544 + 1211))) then else if (3~=v52) then else local v109=0 -0 ;local v110;while true do if (v109==0) then v110=0 + 0 ;while true do local v123=0 -0 ;while true do if (v123~=(1701 -(1220 + 481))) then else if (v110==0) then local v132=0;local v133;while true do if (v132~=(0 + 0)) then else v133=0;while true do if (v133~=(2 -1)) then else v110=1153 -(722 + 430) ;break;end if ((0 -0)==v133) then for v221=1 + 0 ,v23() do v54[v221-(3 -2) ]=v28();end for v223=1,v23() do v55[v223]=v23();end v133=1 + 0 ;end end break;end end end if (v110==(2 -1)) then return v56;end break;end end end break;end end end if (v52~=(1 + 0)) then else local v111=0;local v112;while true do if (v111==(0 -0)) then v112=0 -0 ;while true do if (v112==(524 -(367 + 157))) then local v124=1120 -(530 + 590) ;while true do if (v124~=(3 -2)) then else v112=1;break;end if (v124~=0) then else v56={v53,v54,nil,v55};v57=v23();v124=1;end end end if (v112==(1 + 0)) then v58={};v52=2;break;end end break;end end end v104=3 -2 ;end if (v104==(2 -1)) then v97=1;break;end end end end end break;end if (v51==2) then local v91=0 + 0 ;while true do if (v91==(1 + 0)) then v51=3;break;end if (v91==(1123 -(920 + 203))) then v56=nil;v57=nil;v91=1;end end end end break;end end end local function v29(v59,v60,v61)local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...)local v67=0;local v68;local v69;local v70;local v71;local v72;while true do if (v67==2) then v72=nil;function v72()local v79=v62;local v80=v63;local v81=v64;local v82=v27;local v83={};local v84={};local v85={};for v92=1418 -(922 + 496) ,v71 do if ((v92>=v81) or ((3184 -(7714 -5837))<=822)) then v83[v92-v81 ]=v70[v92 + (748 -(630 + 117)) ];else v85[v92]=v70[v92 + (156 -(123 + 32)) ];end end local v86=(v71-v81) + (1976 -(1337 + 638)) ;local v87;local v88;while true do local v93=1755 -(986 + 769) ;local v94;local v95;while true do if (((2 -1)==v93) or ((4543 -(2496 + 253))>(11026 -6491))) then while true do if ((1663<((9395 -5429) -(575 + 100))) and (v94==(0 + 0))) then v95=0 -0 ;while true do if ((4212>=(391 + 213 + 2923)) and (v95==((3402 -1722) -(1457 + 222)))) then if ((1972<(6789 -2328)) and (v88<=(47 -35))) then if ((v88<=5) or (((5173 -3130) -(955 + 60))>=(720 + 3292))) then if ((817<=(6653 -4272)) and (v88<=2)) then if (((419 + 491)<=(4309 -(852 + 1046))) and (v88<=((885 + 158) -((2406 -(1240 + 324)) + 201)))) then local v127=0 + 0 ;local v128;local v129;while true do if (((602 + 62)==(712 -(22 + 26))) and (v127==((602 -(193 + 409)) + 0))) then v128=0;v129=nil;v127=1;end if ((v127==1) or ((7402 -4083)<276)) then while true do if (((3043 -(94 + 87 + 8))<=(6032 -(1639 + 345))) and (v128==0)) then v129=v87[2 + 0 ];v85[v129](v13(v85,v129 + (1595 -(168 + 1426)) ,v87[11 -8 ]));break;end end break;end end elseif ((v88==(1315 -(747 + 567))) or ((261 + 25)>=(1139 + 1486))) then local v143=1778 -(1772 + (7 -1)) ;local v144;local v145;while true do if (((6369 -(403 + 1012))>=(497 + 684)) and (((2 + 0) -1)==v143)) then while true do if ((769<=(4641 -(568 + 1341))) and (v144==0)) then v145=v87[2 + 0 ];v85[v145]=v85[v145](v13(v85,v145 + 1 + 0 + 0 ,v87[41 -(15 + 23) ]));break;end end break;end if ((v143==(0 -(1525 -(1305 + 220)))) or ((4660 -3304)>=(8905 -4730))) then v144=625 -(162 + 169 + 294) ;v145=nil;v143=2 -1 ;end end else local v146=0 -0 ;local v147;local v148;local v149;while true do if (((6493 -(1253 + 171 + 391))>=(903 + 927)) and (v146==(0 + 0))) then v147=0;v148=nil;v146=1 -0 ;end if (((468 + 482)<=(326 + 3869)) and (v146==(400 -(305 + 94)))) then v149=nil;while true do if ((((3697 -(63 + 1)) -2315)<=(415 + (2560 -1091))) and ((1 + 0)==v147)) then for v235=1 + 0 , #v84 do local v236=0;local v237;local v238;while true do if (((1048 + 771)<=(4097 -1961)) and (v236==((0 -0) + 0))) then v237=603 -(414 + 189) ;v238=nil;v236=3 -2 ;end if (((1600 + 1689)>=(182 + 64)) and (v236==(1 -0))) then while true do if ((3607==(3836 -(63 + 166))) and (v237==((460 + 99) -(250 + 309)))) then v238=v84[v235];for v293=118 -(35 + 8 + 75) , #v238 do local v294=0;local v295;local v296;local v297;while true do if ((v294==((644 + 54) -(41 + 656))) or ((6558 -3079)<=(393 + 1054))) then v297=v295[1 + 1 ];if (((v296==v85) and (v297>=v148)) or ((5350 -(1696 + 290))==(999 -456))) then local v318=0 -0 ;local v319;local v320;while true do if ((v318==(2 -1)) or ((7705 -3133)<(11078 -7214))) then while true do if (((6603 -2233)>(497 + 161)) and ((0 + 0)==v319)) then v320=0 + 0 + 0 ;while true do if ((3141>(993 + 308)) and (v320==(0 + 0))) then v149[v297]=v296[v297];v295[1 + 0 ]=v149;break;end end break;end end break;end if (((11716 -8539)>(627 + 418)) and (v318==(592 -(78 + 514)))) then v319=0 -0 ;v320=nil;v318=1 -0 ;end end end break;end if ((v294==(518 -(488 + 30))) or (4557<(1936 + 465))) then v295=v238[v293];v296=v295[1 -0 ];v294=1 + 0 ;end end end break;end end break;end end end break;end if (((20856 -16654)==(1829 + 2373)) and (v147==(0 -0))) then local v227=422 -(23 + 399) ;local v228;while true do if ((780<=1188) and (v227==(1942 -(790 + 1152)))) then v228=0 -0 ;while true do if ((v228==0) or (196==(15968 -11512))) then local v279=1471 -(339 + 1132) ;while true do if ((((454 + 9015) -6718)<=(998 + 2356)) and (v279==(0 -0))) then v148=v87[1873 -(187 + 8 + 1676) ];v149={};v279=2 -1 ;end if ((v279==(1 -0)) or ((747 + 184)<(1161 -721))) then v228=1 -(0 -0) ;break;end end end if (((5901 -((2859 -1278) + 310))<4979) and (v228==(1 + 0))) then v147=1982 -(1132 + (1258 -(259 + 150))) ;break;end end break;end end end end break;end end end elseif (((1140 -826)<(3985 -2735)) and (v88<=(880 -((1733 -(534 + 513)) + 191)))) then if (((1449 -534)<=(3756 -(507 + 1003))) and (v85[v87[2]]==v87[1 + 3 ])) then v68=v68 + 1 ;else v68=v87[(14 -4) -7 ];end elseif ((2787>=(5083 -3287)) and (v88==(5 -1))) then local v151=0 -0 ;local v152;local v153;local v154;local v155;while true do if ((v151==(1 + 0 + 0 + 0)) or ((4513 + 355)<=(1567 -(161 + 14)))) then v154=nil;v155=nil;v151=648 -(369 + 277) ;end if ((v151==(0 -0)) or ((18061 -13216)<=637)) then v152=0;v153=nil;v151=(335 + 55) -(217 + 172) ;end if ((v151==(8 -6)) or ((3335 -(1194 + 288))<(91 + 8))) then while true do if (((10427 -7245)==(5166 -(1356 + 628))) and (v152==((0 + 0) -0))) then local v229=0;while true do if ((v229==(0 + 0)) or ((4377 -3240)>(1000 + 523))) then v153=0;v154=nil;v229=1 + 0 ;end if (((376 -(284 + 91))==v229) or ((2902 -746)>(2333 + 679))) then v152=1033 -(61 + 24 + 947) ;break;end end end if ((v152==1) or ((3488 + 258)<=(4070 -(196 + 309)))) then v155=nil;while true do if ((v153==(0 -0)) or ((3854 -((474 -223) + 543))==1091)) then local v257=346 -(138 + 208) ;local v258;while true do if ((((5392 -(639 + 359)) -2068)==(5941 -3615)) and ((0 -0)==v257)) then v258=1419 -(839 + 255 + 325) ;while true do if (((6414 -(1411 + 65))>((8602 -4695) -(328 + 642))) and (((2 -1) + (0 -0))==v258)) then v153=3 -2 ;break;end if (((8218 -(5280 -(608 + 571)))>=4113) and (v258==(0 -0))) then v154=v87[201 -(85 + 77 + 37) ];v155=v85[v87[10 -7 ]];v258=344 -(246 + 97) ;end end break;end end end if (((1498 -(631 + 625))>=(771 -(152 + 173 + 276))) and (v153==(1 -0))) then v85[v154 + 1 ]=v155;v85[v154]=v155[v87[8 -4 ]];break;end end break;end end break;end end else v85[v87[1 + 1 ]]=v29(v80[v87[3]],nil,v61);end elseif (((1311 + 288 + 546)>(4999 -3329)) and (v88<=(25 -17))) then if ((v88<=6) or ((13468 -9746)<=(3658 -(908 + 820)))) then v85[v87[1 + 1 ]]();elseif ((((4382 -(1322 + 151)) + 1675)>=2409) and (v88>7)) then local v157=0 + 0 ;local v158;while true do if (((0 + 0)==v157) or ((664 + 535)>(5607 -(947 + 617)))) then v158=v87[2];v85[v158](v85[v158 + 1 + 0 ]);break;end end else v85[v87[2 + 0 ]]=v87[1 + 2 ]~=(687 -(36 + 651)) ;end elseif (((289 + 1095)<(3249 -(1164 + 221))) and (v88<=((175 + 116) -(261 + 20)))) then if ((v88==(16 -7)) or ((984 -(29 + 124))==139)) then local v160=0;local v161;local v162;local v163;local v164;local v165;while true do if ((v160==(4 -2)) or ((4462 -(94 + 393))<((2812 -(584 + 90)) -1330))) then v165=nil;while true do if ((v161==(1 -0)) or ((5659 -(679 + (3129 -(1842 + 97))))==(4979 -(572 + 535)))) then local v230=0 -0 ;while true do if ((2976>=(4777 -2361)) and ((2 -1)==v230)) then v161=1832 -(80 + (4056 -2306)) ;break;end if (((734 -(447 + 156))>=(28 -14)) and (v230==(0 -0))) then local v262=1937 -(1932 + 5) ;while true do if ((v262==(2 -1)) or ((1838 + 1444)<659)) then v230=1 -0 ;break;end if ((v262==((1894 -(806 + 1088)) -0)) or ((18639 -14733)==(2602 + 1975))) then v69=(v164 + v162) -(1286 -(537 + (1853 -1105))) ;v165=451 -(101 + 350) ;v262=1 + 0 ;end end end end end if (((122 + 120)<(4445 + 39)) and ((1287 -(400 + 887))==v161)) then local v231=0 -(863 -(604 + 259)) ;local v232;while true do if (((5422 -(117 + 481))>=3958) and ((0 + 0)==v231)) then v232=1998 -(962 + 1036) ;while true do if ((v232==1) or ((81 + 65 + 1243)>(1621 + 2900))) then v161=1;break;end if ((v232==(0 -0)) or ((4734 -3443)<=(2193 -1414))) then local v280=0;while true do if ((v280==(1 + 0)) or ((2277 -(857 + (733 -430)))==(20523 -15643))) then v232=1;break;end if ((v280==(1047 -(857 + 190))) or ((1720 -(459 + 1163))>=(353 + 1945))) then v162=v87[8 -6 ];v163,v164=v82(v85[v162](v13(v85,v162 + 1 + 0 ,v87[8 -5 ])));v280=1 + 0 ;end end end end break;end end end if (((2 + (1565 -(1446 + 119)))==v161) or ((1523 -(150 + 22))>=1812)) then for v239=v162,v69 do local v240=0 + 0 ;local v241;local v242;while true do if (((3286 -(30 + 201 + 98))<((5956 -(1433 + 68)) -(31 + 308))) and (v240==1)) then while true do if (((0 -(0 -0))==v241) or ((3810 + 256)<=(2618 -1302))) then v242=(0 -0) + 0 ;while true do if ((v242==0) or (4720==(5586 -(1142 + 251)))) then v165=v165 + 1 ;v85[v239]=v163[v165];break;end end break;end end break;end if ((v240==0) or ((5272 -2941)<=2174)) then v241=0 + 0 ;v242=nil;v240=805 -(376 + 428) ;end end end break;end end break;end if (((9109 -4499)==(17242 -12632)) and (v160==(2 -1))) then v163=nil;v164=nil;v160=6 -4 ;end if ((v160==((0 -0) -0)) or ((26 + 194)>(8323 -5989))) then local v201=(657 -(77 + 580)) -0 ;while true do if ((v201==(617 -(490 + 127))) or ((495 + (799 -(55 + 105)))==(275 + 2))) then v161=(1897 -(1171 + 726)) + 0 ;v162=nil;v201=1 + 0 ;end if ((v201==1) or (2779==(4203 -(1160 + 573)))) then v160=1070 -(1037 + 32) ;break;end end end end elseif ((v87[1730 -(386 + 1342) ]==v85[v87[1 + 3 ]]) or ((7637 -5926)>(11132 -7142))) then v68=v68 + 1 + 0 ;else v68=v87[3];end elseif ((((11304 -8561) -(490 + 762))<4326) and (v88==(21 -10))) then local v166=0;local v167;local v168;local v169;local v170;local v171;while true do if (((6000 -(777 + 597))==(3450 + 1176)) and ((764 -(36 + 726))==v166)) then v171=nil;while true do if ((v167==(1522 -(1370 + 147 + 3))) or (4038==(12821 -9153))) then while true do if (((4510 -(1178 + 346))==2986) and (v168==(0 + 0))) then local v263=1578 -(98 + 1480) ;while true do if (((5610 -3832)>1311) and ((0 + 0)==v263)) then v169=v87[980 -(10 + 968) ];v170=v85[v169];v263=1;end if ((1935<(5392 -(9553 -6341))) and ((906 -(732 + 173))==v263)) then v168=3 -2 ;break;end end end if ((v168==(1 + 0)) or ((2040 + 1071)>=(5064 -(104 + 558)))) then v171=v87[2 + 1 ];for v266=2 -1 ,v171 do v170[v266]=v85[v169 + v266 ];end break;end end break;end if ((v167==(1969 -(902 + 1066))) or ((1573 + 2036)==(5318 -3904))) then local v233=0 -0 ;while true do if (((930 + 2398)>((3069 -730) -(363 + 1607))) and (v233==(1543 -(1194 + 348)))) then v167=2;break;end if ((v233==0) or ((5258 -2993)>=(6982 -4596))) then v170=nil;v171=nil;v233=1 + 0 ;end end end if (((0 -0)==v167) or ((5852 -((1488 -(703 + 473)) + (3380 -2234)))<((6952 -3401) -(175 + 24)))) then v168=0;v169=nil;v167=1 -0 ;end end break;end if ((3478>(64 + 89)) and (v166==(1 + 0))) then v169=nil;v170=nil;v166=587 -(549 + 36) ;end if ((3400<=(4500 -(237 + 327))) and (v166==(0 + 0))) then v167=0 -0 ;v168=nil;v166=1;end end else v85[v87[2 + 0 ]][v87[12 -9 ]]=v85[v87[794 -(785 + 5) ]];end elseif ((((784 -553) + 258)<=((943 -317) + 224)) and (v88<=(13 + 6))) then if ((v88<=(170 -(40 + 115))) or ((344 + (131 -53))>(2614 -(1200 + 259)))) then if ((v88<=((1755 -(228 + 127)) -(1132 + 255))) or (((601 + 8083) -4662)>=4481)) then for v134=v87[4 -2 ],v87[4 -1 ] do v85[v134]=nil;end elseif (((1197 -(12 + 341))==844) and (v88>((3242 -(259 + 1721)) -(1133 + 115)))) then v68=v87[1197 -(349 + 845) ];else local v175=0 + 0 ;local v176;local v177;local v178;while true do if (((400 -(144 + 15))<=(11229 -8360)) and (v175==(1 + 0))) then local v202=378 -(289 + 89) ;while true do if ((v202==1) or (1196>4118)) then v175=1 + 1 ;break;end if ((3188<(16295 -12682)) and (v202==((1747 -(290 + 327)) -(184 + 946)))) then v178={};v177=v10({},{__index=function(v243,v244)local v245=0 + 0 ;local v246;local v247;local v248;while true do if ((v245==(0 + 0)) or ((183 -53)==(503 -(169 + 62)))) then v246=1060 -(683 + 266 + 111) ;v247=nil;v245=3 -2 ;end if ((v245==(1457 -(339 + 1117))) or (((695 + 2316) -((3048 -1711) + 449))==(5903 -1118))) then v248=nil;while true do if ((v246==0) or ((1395 + 382)>=4532)) then local v290=0;while true do if (((4656 -(177 + 446))>(465 + 215 + 247)) and (v290==((2 -1) + 0))) then v246=1;break;end if ((1604>=(869 -(564 + 136))) and (v290==(1400 -(1389 + 11)))) then v247=1575 -(708 + (1631 -764)) ;v248=nil;v290=2 -(1625 -(1593 + 31)) ;end end end if (((11330 -8052)>(94 + (749 -559))) and (v246==1)) then while true do if ((v247==(0 -0)) or ((844 -(260 + 90 + 67))>=(4530 -(526 + 1094)))) then local v306=0 -0 ;local v307;while true do if ((1366>(2872 -2209)) and (v306==((1437 -(1212 + 225)) -0))) then v307=0 + 0 ;while true do if ((v307==(0 + 0)) or (1086==(3090 -(854 + 206)))) then v248=v178[v244];return v248[1 + 0 ][v248[3 -1 ]];end end break;end end end end break;end end break;end end end,__newindex=function(v249,v250,v251)local v252=0 -0 ;local v253;local v254;while true do if ((1493<=3491) and (1==v252)) then while true do if ((v253==((3588 -2098) -(7 + 67 + 1416))) or (4217<(138 + 45))) then v254=v178[v250];v254[1][v254[7 -5 ]]=v251;break;end end break;end if ((v252==(607 -(561 + (1863 -(1329 + 488))))) or ((3123 + 870)<((2881 + 1660) -(989 + 122)))) then local v269=0 + 0 ;while true do if ((v269==((980 -(775 + 64)) -(139 + 1))) or ((447 -123)>=4049)) then v252=993 -(858 + 134) ;break;end if ((v269==0) or ((646 -225)>((760 -381) + 3222))) then v253=0;v254=nil;v269=1318 -(994 + 323) ;end end end end end});v202=1798 -(487 + 1310) ;end end end if (((1790 + 16)==(49 + 1757)) and ((1981 -(1544 + 435))==v175)) then for v211=4 -3 ,v87[7 -3 ] do local v212=1739 -((711 -306) + 1334) ;local v213;local v214;while true do if ((v212==0) or ((3919 + (2401 -1388))<=(5252 -2763))) then v213=0;v214=nil;v212=1 + 0 ;end if ((v212==(1 + 0)) or (4807<3825)) then while true do if (((855 -562)<=(2637 -(782 + 11))) and (v213==(0 -0))) then v68=v68 + (1542 -(193 + 1348)) ;v214=v79[v68];v213=1278 -(808 + 469) ;end if ((224<=1398) and (v213==(1071 -(687 + 383)))) then if ((((4612 -(120 + 8)) -2736)<(1569 + 527)) and (v214[3 -2 ]==(63 -38))) then v178[v211-(529 -(28 + 500)) ]={v85,v214[7 -4 ]};else v178[v211-(2 -1) ]={v60,v214[1837 -(1115 + 719) ]};end v84[ #v84 + 1 + (0 -0) ]=v178;break;end end break;end end end v85[v87[1232 -(506 + 724) ]]=v29(v176,v177,v61);break;end if ((4518>=(25 + 280)) and (v175==(747 -(529 + 218)))) then v176=v80[v87[5 -2 ]];v177=nil;v175=(2 + 1) -2 ;end end end elseif (((4864 -(1209 + 622))>(2476 -(113 + 197 + 1279))) and (v88<=(800 -((1225 -(555 + 171)) + (947 -(242 + 421)))))) then if ((v88>(457 -(433 + (12 -4)))) or (1138>3513)) then v85[v87[5 -3 ]]=v60[v87[8 -5 ]];else local v181=0 + 0 ;local v182;local v183;local v184;while true do if (((7439 -5150)<4847) and (v181==(1127 -(13 + 1114)))) then local v205=0 + 0 ;while true do if (((4755 -(2361 + 130))<=3982) and (v205==0)) then v182=(901 -(649 + 114)) -((169 -123) + 92) ;v183=nil;v205=1 + 0 ;end if ((v205==1) or ((267 -(92 + 122))>=231)) then v181=715 -(406 + 308) ;break;end end end if (((1227 -((1282 -(782 + 486)) + (1748 -(257 + 279))))==v181) or (4142>=4337)) then v184=nil;while true do if ((((1 -0) -0)==v182) or ((4375 -(756 + 153))>(13275 -9115))) then for v255=v183 + 1 ,v87[3 + 0 ] do v7(v184,v85[v255]);end break;end if ((v182==(0 -0)) or ((435 + 434)>=4247)) then local v234=556 -(41 + 515) ;while true do if (((2729 -(49 + 70))>=(87 + 202)) and (v234==(2 -1))) then v182=1;break;end if (((2016 -(425 + 240))<=3682) and (v234==(0 -0))) then local v265=0;while true do if ((v265==((1935 -(773 + 1162)) + 0)) or ((3937 -(1466 + 206 + 9))<=(506 + 234))) then v183=v87[1 + 1 ];v184=v85[v183];v265=(6392 -4400) -(1724 + 267) ;end if ((v265==(888 -(25 + 862))) or ((2475 -(626 + 60))==(6181 -(1297 + 273)))) then v234=1;break;end end end end end end break;end end end elseif (((4587 -2033)<3953) and (v88>(30 -12))) then local v185=493 -(109 + 384) ;local v186;while true do if ((v185==(0 + 0)) or ((5580 -2157)<=(2454 -1554))) then v186=v87[3 -1 ];v85[v186]=v85[v186](v13(v85,v186 + ((1796 + 107) -(864 + 1038)) ,v69));break;end end else v85[v87[2]]=v61[v87[6 -3 ]];end elseif ((v88<=(1777 -((3374 -1807) + 188))) or ((2236 -1573)>3429)) then if ((v88<=(7 + 13)) or (3711==(2439 + 470))) then v85[v87[2]]={};elseif (((4377 -1008)<=(10187 -(8235 -(659 + 866)))) and (v88==(57 -36))) then v85[v87[7 -5 ]]=v85[v87[199 -(87 + 109) ]][v87[4]];else v85[v87[2]][v87[3]]=v87[(1802 -(182 + 84)) -(139 + 1393) ];end elseif ((v88<=24) or (3223<=1676)) then if (((4637 -(1394 + 422))<=(15896 -11310)) and (v88==23)) then do return;end else local v193=0 -0 ;local v194;while true do if ((v193==(1611 -(1092 + 519))) or ((386 + 727)>=1678)) then v194=v87[(2 -1) + (2 -1) ];v85[v194]=v85[v194]();break;end end end elseif (((5431 -(638 + 1200))>(668 + 2281)) and (v88>(13 + 12))) then v85[v87[6 -4 ]]=v87[3];else v85[v87[1691 -(1278 + 411) ]]=v85[v87[1 + 1 + 1 ]];end v68=v68 + (3 -2) ;break;end if ((2901>=((1278 -(771 + 325)) + 146)) and (v95==0)) then local v113=391 -(134 + 257) ;local v114;while true do if ((3253>(4122 -1305)) and ((0 -0)==v113)) then v114=0 + 0 ;while true do if ((v114==(1 + 0)) or ((13296 -8854)>=(5793 -(1048 + 141)))) then v95=1 + 0 ;break;end if (((2135 -(103 + 1072))<(1836 -(39 + 21))) and ((0 -0)==v114)) then v87=v79[v68];v88=v87[575 -(34 + 540) ];v114=1 + 0 ;end end break;end end end end break;end end break;end if ((v93==(0 + 0)) or ((3115 + 256)<=(5918 -2746))) then v94=1609 -(1242 + 367) ;v95=nil;v93=(2 -1) + 0 + 0 ;end end end end v67=3;end if (v67==0) then v68=1;v69= -1;v67=1;end if (v67==3) then A,B=v27(v11(v72));if  not A[1] then local v96=v59[4][v68] or "?" ;error("Script error at ["   .. v96   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (v67==1) then v70={...};v71=v12("#",...) -1 ;v67=2;end end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
